#BlueJ class context
comment0.target=StorageLocation
comment0.text=\r\n\ This\ object\ holds\ all\ information\ related\ to\ any\ instance\ of\ the\ Storage\ \r\n\ Location\r\n\r\n\ @author\ (Brian\ Maxwell)\r\n\ @version\ (4)\r\n
comment1.params=designation
comment1.target=StorageLocation(java.lang.String)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ StorageLocation\r\n\ \r\n\ @param\ \ \ designation\ \ \ \ \ the\ name\ of\ the\ store\ location\ to\ be\ instantiated\r\n
comment10.params=roomType
comment10.target=StorageUnit[]\ getEmptyUnitsOfType(RoomType)
comment10.text=\r\n\ Retrieves\ an\ array\ of\ all\ empty\ units\ of\ a\ given\ type\r\n\r\n\ @param\ \ \ roomType\ \ \ \ type\ of\ the\ room\ to\ be\ searched\ for\r\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ an\ array\ of\ StorageUnits,\ of\ the\ type,\ that\ are\ empty\r\n
comment2.params=
comment2.target=java.lang.String\ getDesignation()
comment2.text=\r\n\ a\ getter\ method\ for\ Designation\r\n\r\n\ @return\ \ \ \ the\ designation\ for\ the\ store\r\n
comment3.params=row\ col
comment3.target=StorageUnit\ getStorageUnit(int,\ int)
comment3.text=\r\n\ a\ getter\ method\ for\ any\ particular\ Storage\ \ Unit\r\n\ \r\n\ @param\ \ \ row\ \ \ \ \ the\ index\ of\ the\ row\ to\ be\ retrieved\r\n\ @param\ \ \ col\ \ \ \ \ the\ index\ of\ the\ column\ to\ be\ retrieved\r\n\ @return\ \ \ \ \ \ \ \ \ \ the\ Storage\ Unit\ at\ the\ specified\ indexes\r\n
comment4.params=name\ pNumber
comment4.target=void\ addCustomer(java.lang.String,\ java.lang.String)
comment4.text=\r\n\ adds\ a\ new\ customer\ to\ the\ array\ Customers\r\n\r\n\ @param\ \ \ name\ \ \ \ \ \ \ \ Customer\ name\ to\ be\ added\r\n\ @param\ \ \ pNumber\ \ \ \ \ Customer\ phone\ number\ to\ be\ added\r\n\ \r\n
comment5.params=index
comment5.target=Customer\ getCustomer(int)
comment5.text=\r\n\ Get\ the\ customer\ at\ the\ given\ index\r\n\ \r\n\ @param\ \ index\ \ \ \ \ the\ given\ index\r\n\ @return\ \ \ \ \ \ \ \ \ \ \ the\ customer\ at\ the\ given\ index\r\n
comment6.params=
comment6.target=int\ getNumCustomers()
comment6.text=\r\n\ gets\ the\ number\ of\ the\ customers\ currently\ in\ the\ array\ customers\r\n\r\n\ @return\ \ \ \ the\ number\ of\ customers\r\n
comment7.params=
comment7.target=void\ accrueRent()
comment7.text=\r\n\ charges\ every\ storage\ unit's\ monthly\ rent\ to\ the\ customer\ who\ owns\ it\r\n\r\n
comment8.params=cust
comment8.target=StorageUnit[]\ getUnitsByCustomer(Customer)
comment8.text=\r\n\ retreives\ an\ array\ of\ storage\ units\ owned\ by\ any\ particulat\ customer\r\n\r\n\ @param\ \ Customer\ \ \ \ \ the\ customer\ whose\ units\ are\ being\ retrieved\r\n\ @return\ \ \ \ \ \ \ \ \ \ \ \ \ \ the\ array\ of\ Storage\ Units\ owned\r\n
comment9.params=
comment9.target=StorageUnit[]\ getEmptyUnits()
comment9.text=\r\n\ Retrieves\ an\ array\ of\ all\ empty\ units\r\n\r\n\ @return\ \ \ \ an\ array\ of\ StorageUnits\ that\ are\ empty\r\n
numComments=11
